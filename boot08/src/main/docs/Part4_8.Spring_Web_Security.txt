#8. Spring Web Security

- 웹 기반 프로젝트에서 사용자 인증을 처리하는 부분은 반드시 필요한 부분임, 스프링의 경우 이러한 작업을 위해 Spring Security를 적용할 수 있음
- 스프링 시큐리티 적용
1) 사용자의 권한에 따른 URI 접근 제어
2) 데이터베이스와 연동하는 로그인 처리
3) 쿠키를 이용한 자동 로그인 (remember-me)
4) 패스워드 암호화

* 인증(Authentication)과 인가(Authorization) 이란?
- 인증 : '증명하다' 라는 의미, 이때 증명의 대상은 어떤 경우에는 표시나 자격일 수도 있고, 사람의 신분일 수도 있음, 예를들어 만일 우리가 암호가 걸려있는 시스템을 사용한다면, 인증 절차를 거쳐야함
          'Pass(지나가다)' 라는 개념과 관련이 있음, 예를 들어 집에 들어가기 전 입력하는 암호 또는 열쇠로 문을 여는 행위가 '인증' 이라고 볼 수 있음, 실제 인증은 보통 자물쇠와 같은 이미지로 표현됨
- 인가 : '권한 부여' 나 '허가'와 같은 의미로 사용, 보안에서는 어떤 대상이 있다면 인가된 사용자만이 보안된 대상을 사용할 수 있다는 의미로 해석

=> 웹에서 '인증' 이란 해당 URL은 보안 절차를 거친 사용자들만이 접근할 수 있다는 의미, '인가' 란 URL에 접근한 사용자가 특정한 자격이 있다는 것을 의미

8.1. 예제 프로젝트 생성
1) 사용자와 사용자의 권한을 관리하는 기능
2) 해당 기능을 이용해 스프링 시큐리티를 적용하는 부분
- 이전 장에서 사용했던 라이브러리들과 더불어, 'security' 항목의 'Spring Security' 추가해 생성, application.properties 수정 (마지막에 security 관련 로그 출력하는 부분에 대한 설정을 'debug'로 설정)

























