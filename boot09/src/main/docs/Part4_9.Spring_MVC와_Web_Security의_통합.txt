#9. Spring MVC와 Web Security의 통합
- Spring MVC를 이용해 만든 기존 프로젝트에 스프링 시큐리티를 추가
1) 웹 프로젝트에서 특정 URI에 대한 접근 제한 처리 및 로그인
2) Ajax를 이용하는 호출 시 CSRF 토큰에 대한 처리

9.1. 프로젝트 구성
- 예제는 게시물 관리 시스템과 시큐리티 프로젝트를 하나로 묶는 작업
- 작성된 프로젝트의 모든 기능을 사용하기 위해 pom.xml에 추가 라이브러리들이 필요 (Thymeleaf-layout, Querydsl, Thymeleaf-security)

9.1.1. 기존 프로젝트 통합
- 프로젝트를 통합할 때 가장 우선적으로는 application.properties를 처리, 저번 프로젝트 application.properties를 그대로 복사해서 사용
- 만들어진 프로젝트에 게시물과 댓글 처리와 관련된 내용이 필요하므로 저번 프로젝트 복사
- 현재까지 복사한 프로젝트가 정상적으로 동작하는지 프로젝트를 실행시켜 확인
- 브라우저에서는 '/board/list'를 호출했을 때 정상적으로 호출되고, 로그인 경고창이 보이는 것을 확인, 경고창이 뜨는 이유는 스프링 시큐리티가 추가되고 별도 설정이 없기 때문
- 이는 스프링 부트에 자동 설정 기능이 동작하기 때문, 프로젝트 생성 시 'security' 를 추가한 상태이므로 기본 인증 처리가 설정되기 때문에 로그인 창이 보임
- 기본 인증 매니저는 'user'라는 계정을 가지고, 패스워드는 프로젝트의 로딩 시 출력되는 기본 패스워드임, 이를 이용해 로그인을 하면 정상적으로 list화면이 출력되어야 함







































